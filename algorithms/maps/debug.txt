Reading symbols from ./graph...
[New LWP 23792]
Core was generated by `./graph'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x000055689ba2a312 in get_neighbors (graph=0x55689bb300a0, i=-1) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
The program is not being run.
The program is not being run.
#0  0x000055689ba2a312 in get_neighbors (graph=0x55689bb300a0, i=-1) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
Undefined command: "bs".  Try "help".
Reading symbols from ./graph...
[New LWP 23792]
Core was generated by `./graph'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x000055689ba2a312 in get_neighbors (graph=0x55689bb300a0, i=-1) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
Ambiguous command "st": stack, start, starti, status, step, stepi, stepping, stop, strace.
#0  0x000055689ba2a312 in get_neighbors (graph=0x55689bb300a0, i=-1) at graph.cpp:77
#1  0x000055689ba2673d in dijkstra (graph=0x55689bb300a0, src=0) at main.cpp:84
#2  0x000055689ba2725e in main () at main.cpp:243
Breakpoint 1 at 0x55689ba2723a: file main.cpp, line 242.
Starting program: /home/dic3jam/Desktop/notebook/3050-Alogorithms/14week/graph 

Breakpoint 1, main () at main.cpp:242
242		cout << "DJ's\n";
243		int* djs_predecessor = dijkstra(graph, 0);
dijkstra (graph=0x7fffffffdad0, src=0) at main.cpp:68
68	int* dijkstra(Graph* graph, int src) {
94	    return prev;
$1 = 0
$2 = (Graph *) 0x5555555720a0
69	    vector<int> queue;
70	    int* prev = (int*) malloc(graph->SIZE * sizeof(int));
71	    int dist[graph->SIZE];
No symbol "grapg" in current context.
$3 = 5
73	    for (int v = 0; v < graph->SIZE; v++) {
74	        dist[v] = INFINITY;
75	        prev[v] = NO_PREDECESSOR;
76	        queue.push_back(v);
73	    for (int v = 0; v < graph->SIZE; v++) {
74	        dist[v] = INFINITY;
75	        prev[v] = NO_PREDECESSOR;
76	        queue.push_back(v);
73	    for (int v = 0; v < graph->SIZE; v++) {
74	        dist[v] = INFINITY;
75	        prev[v] = NO_PREDECESSOR;
76	        queue.push_back(v);
73	    for (int v = 0; v < graph->SIZE; v++) {
74	        dist[v] = INFINITY;
75	        prev[v] = NO_PREDECESSOR;
76	        queue.push_back(v);
Hardware watchpoint 2: v
73	    for (int v = 0; v < graph->SIZE; v++) {

Hardware watchpoint 2: v

Old value = 3
New value = 4
0x00005555555556db in dijkstra (graph=0x5555555720a0, src=0) at main.cpp:73
73	    for (int v = 0; v < graph->SIZE; v++) {
74	        dist[v] = INFINITY;
75	        prev[v] = NO_PREDECESSOR;
76	        queue.push_back(v);
73	    for (int v = 0; v < graph->SIZE; v++) {

Hardware watchpoint 2: v

Old value = 4
New value = 5
0x00005555555556db in dijkstra (graph=0x5555555720a0, src=0) at main.cpp:73
73	    for (int v = 0; v < graph->SIZE; v++) {
79	    dist[src] = 0;
No frame is currently executing in specified block
Command aborted.
No frame is currently executing in specified block
Command aborted.
#1  0x000055555555625e in main () at main.cpp:243
243		int* djs_predecessor = dijkstra(graph, 0);
No frame is currently executing in specified block
Command aborted.
#1  0x000055555555625e in main () at main.cpp:243
243		int* djs_predecessor = dijkstra(graph, 0);
No frame is currently executing in specified block
Command aborted.
#1  0x000055555555625e in main () at main.cpp:243
243		int* djs_predecessor = dijkstra(graph, 0);
No frame is currently executing in specified block
Command aborted.
No frame is currently executing in specified block
Command aborted.
#0  dijkstra (graph=0x5555555720a0, src=0) at main.cpp:79
#1  0x000055555555625e in main () at main.cpp:243
No frame is currently executing in specified block
Command aborted.
No frame is currently executing in specified block
Command aborted.
Reading symbols from ./graph...
[New LWP 23792]
Core was generated by `./graph'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x000055689ba2a312 in get_neighbors (graph=0x55689bb300a0, i=-1) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
Breakpoint 1 at 0x55689ba2a2d9: file graph.cpp, line 76.
Starting program: /home/dic3jam/Desktop/notebook/3050-Alogorithms/14week/graph 

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=0) at graph.cpp:76
76		for (int j = 0; j < graph->SIZE; j++) {
$1 = 5
SSH_AUTH_SOCK=/tmp/ssh-z460BcoymROe/agent.1819
SSH_AGENT_PID=1885
LANG=en_US.UTF-8
XDG_CURRENT_DESKTOP=i3
COLORTERM=truecolor
DEFAULTS_PATH=/usr/share/gconf/i3.default.path
TERMINATOR_DBUS_PATH=/net/tenshu/Terminator2
TERMINATOR_UUID=urn:uuid:b0fad42e-d5d4-4b88-bd6e-ee49654e52f2
GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1
DESKTOP_SESSION=i3
USER=dic3jam
HOME=/home/dic3jam
DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus
XDG_VTNR=2
XDG_SEAT=seat0
I3SOCK=/run/user/1000/i3/ipc-socket.1819
GTK_MODULES=gail:atk-bridge
XDG_CONFIG_DIRS=/etc/xdg/xdg-i3:/etc/xdg
WINDOWPATH=2
XDG_SESSION_DESKTOP=i3
QT_ACCESSIBILITY=1
XDG_DATA_DIRS=/usr/share/i3:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
MANDATORY_PATH=/usr/share/gconf/i3.mandatory.path
LOGNAME=dic3jam
VTE_VERSION=6003
PATH=/home/dic3jam/.local/bin:/home/dic3jam/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/dic3jam/.local/bin:/home/dic3jam/.fzf/bin
XDG_RUNTIME_DIR=/run/user/1000
XDG_SESSION_ID=2
XDG_SESSION_TYPE=x11
SHELL=/usr/bin/zsh
USERNAME=dic3jam
TERMINATOR_DBUS_NAME=net.tenshu.Terminator21a9d5db22c73a993ff0b42f64b396873
SHLVL=1
XAUTHORITY=/run/user/1000/gdm/Xauthority
PWD=/home/dic3jam/Desktop/notebook/3050-Alogorithms/14week
XDG_SESSION_CLASS=user
GDMSESSION=i3
TERM=xterm-256color
DISPLAY=:0
OLDPWD=/home/dic3jam/Desktop/notebook/3050-Alogorithms
ZSH=/home/dic3jam/dotfiles/.oh-my-zsh
LS_COLORS=no=00:fi=00:di=34:ow=34;40:ln=35:pi=30;44:so=35;44:do=35;44:bd=33;44:cd=37;44:or=05;37;41:mi=05;37;41:ex=01;31:*.cmd=01;31:*.exe=01;31:*.com=01;31:*.bat=01;31:*.reg=01;31:*.app=01;31:*.txt=32:*.org=32:*.md=32:*.mkd=32:*.h=32:*.hpp=32:*.c=32:*.C=32:*.cc=32:*.cpp=32:*.cxx=32:*.objc=32:*.cl=32:*.sh=32:*.bash=32:*.csh=32:*.zsh=32:*.el=32:*.vim=32:*.java=32:*.pl=32:*.pm=32:*.py=32:*.rb=32:*.hs=32:*.php=32:*.htm=32:*.html=32:*.shtml=32:*.erb=32:*.haml=32:*.xml=32:*.rdf=32:*.css=32:*.sass=32:*.scss=32:*.less=32:*.js=32:*.coffee=32:*.man=32:*.0=32:*.1=32:*.2=32:*.3=32:*.4=32:*.5=32:*.6=32:*.7=32:*.8=32:*.9=32:*.l=32:*.n=32:*.p=32:*.pod=32:*.tex=32:*.go=32:*.sql=32:*.csv=32:*.sv=32:*.svh=32:*.v=32:*.vh=32:*.vhd=32:*.bmp=33:*.cgm=33:*.dl=33:*.dvi=33:*.emf=33:*.eps=33:*.gif=33:*.jpeg=33:*.jpg=33:*.JPG=33:*.mng=33:*.pbm=33:*.pcx=33:*.pdf=33:*.pgm=33:*.png=33:*.PNG=33:*.ppm=33:*.pps=33:*.ppsx=33:*.ps=33:*.svg=33:*.svgz=33:*.tga=33:*.tif=33:*.tiff=33:*.xbm=33:*.xcf=33:*.xpm=33:*.xwd=33:*.xwd=33:*.yuv=33:*.nef=33:*.NEF=33:*.aac=33:*.au=33:*.flac=33:*.m4a=33:*.mid=33:*.midi=33:*.mka=33:*.mp3=33:*.mpa=33:*.mpeg=33:*.mpg=33:*.ogg=33:*.opus=33:*.ra=33:*.wav=33:*.anx=33:*.asf=33:*.avi=33:*.axv=33:*.flc=33:*.fli=33:*.flv=33:*.gl=33:*.m2v=33:*.m4v=33:*.mkv=33:*.mov=33:*.MOV=33:*.mp4=33:*.mp4v=33:*.mpeg=33:*.mpg=33:*.nuv=33:*.ogm=33:*.ogv=33:*.ogx=33:*.qt=33:*.rm=33:*.rmvb=33:*.swf=33:*.vob=33:*.webm=33:*.wmv=33:*.doc=31:*.docx=31:*.rtf=31:*.odt=31:*.dot=31:*.dotx=31:*.ott=31:*.xls=31:*.xlsx=31:*.ods=31:*.ots=31:*.ppt=31:*.pptx=31:*.odp=31:*.otp=31:*.fla=31:*.psd=31:*.7z=1;35:*.apk=1;35:*.arj=1;35:*.bin=1;35:*.bz=1;35:*.bz2=1;35:*.cab=1;35:*.deb=1;35:*.dmg=1;35:*.gem=1;35:*.gz=1;35:*.iso=1;35:*.jar=1;35:*.msi=1;35:*.rar=1;35:*.rpm=1;35:*.tar=1;35:*.tbz=1;35:*.tbz2=1;35:*.tgz=1;35:*.tx=1;35:*.war=1;35:*.xpi=1;35:*.xz=1;35:*.z=1;35:*.Z=1;35:*.zip=1;35:*.zst=1;35:*.ANSI-30-black=30:*.ANSI-01;30-brblack=01;30:*.ANSI-31-red=31:*.ANSI-01;31-brred=01;31:*.ANSI-32-green=32:*.ANSI-01;32-brgreen=01;32:*.ANSI-33-yellow=33:*.ANSI-01;33-bryellow=01;33:*.ANSI-34-blue=34:*.ANSI-01;34-brblue=01;34:*.ANSI-35-magenta=35:*.ANSI-01;35-brmagenta=01;35:*.ANSI-36-cyan=36:*.ANSI-01;36-brcyan=01;36:*.ANSI-37-white=37:*.ANSI-01;37-brwhite=01;37:*.log=01;32:*~=01;32:*#=01;32:*.bak=01;33:*.BAK=01;33:*.old=01;33:*.OLD=01;33:*.org_archive=01;33:*.off=01;33:*.OFF=01;33:*.dist=01;33:*.DIST=01;33:*.orig=01;33:*.ORIG=01;33:*.swp=01;33:*.swo=01;33:*.v=01;33:*.gpg=34:*.gpg=34:*.pgp=34:*.asc=34:*.3des=34:*.aes=34:*.enc=34:*.sqlite=34:
PAGER=less
LESS=-R
LSCOLORS=Gxfxcxdxbxegedabagacad
_=/usr/bin/gdb
LINES=39
COLUMNS=149
77	        if (graph->distance[i][j] != 0) {
$2 = (int **) 0x5555555723c0
$3 = 0
76		for (int j = 0; j < graph->SIZE; j++) {
77	        if (graph->distance[i][j] != 0) {
78	            neighbors.push_back(j);
76		for (int j = 0; j < graph->SIZE; j++) {
77	        if (graph->distance[i][j] != 0) {
76		for (int j = 0; j < graph->SIZE; j++) {
77	        if (graph->distance[i][j] != 0) {
76		for (int j = 0; j < graph->SIZE; j++) {
77	        if (graph->distance[i][j] != 0) {
78	            neighbors.push_back(j);
76		for (int j = 0; j < graph->SIZE; j++) {
82		return neighbors;
83	}
$4 = std::vector of length 2, capacity 2 = {1, 4}
bfs (graph=0x5555555720a0, src=0) at main.cpp:210
210				if(!discovered[n]) {
211					q.push(n);
212					discovered[n] = true;
213					predecessor[n] = v;
209			for(int n : get_neighbors(graph, v)) {
210				if(!discovered[n]) {
211					q.push(n);
212					discovered[n] = true;
213					predecessor[n] = v;
209			for(int n : get_neighbors(graph, v)) {
205		while(!q.empty()) {
206			int v = q.front();
207			q.pop();
Reading symbols from ./graph...

warning: exec file is newer than core file.
[New LWP 23792]
Core was generated by `./graph'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x000055689ba2a312 in get_neighbors (graph=0x55689bb300a0, i=-1) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
Breakpoint 1 at 0x55689ba2a2ed: file graph.cpp, line 77.
Starting program: /home/dic3jam/Desktop/notebook/3050-Alogorithms/14week/graph 

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=0) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
Continuing.

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=0) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
Continuing.

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=0) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
No symbol "env" in current context.
Argument list to give program being debugged when it is started is "".
j = 2
neighbors = std::vector of length 1, capacity 1 = {1}
$1 = 0
$2 = {0x5555555723c0, 0x5555555720c0, 0x31, 0x5555555720f0, 0x555555572180}
$3 = {{0x5555555723c0, 0x5555555720c0, 0x31, 0x5555555720f0, 0x555555572180}, {0x555555572210, 0x5555555722a0, 0x555555572330, 0x91, 0x4e}, {0x0, 
    0x0, 0x0, 0x0, 0x0}, {0x0, 0x0, 0x0, 0x0, 0x0}, {0x0, 0x0, 0x0, 0x0, 0x0}}
$4 = 2
76		for (int j = 0; j < graph->SIZE; j++) {
#0  get_neighbors (graph=0x5555555720a0, i=0) at graph.cpp:76
#1  0x0000555555555f49 in bfs (graph=0x5555555720a0, src=0) at main.cpp:209
#2  0x0000555555556102 in main () at main.cpp:227
Continuing.

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=0) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
#0  get_neighbors (graph=0x5555555720a0, i=0) at graph.cpp:77
#1  0x0000555555555f49 in bfs (graph=0x5555555720a0, src=0) at main.cpp:209
#2  0x0000555555556102 in main () at main.cpp:227
Continuing.

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=0) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
#0  get_neighbors (graph=0x5555555720a0, i=0) at graph.cpp:77
#1  0x0000555555555f49 in bfs (graph=0x5555555720a0, src=0) at main.cpp:209
#2  0x0000555555556102 in main () at main.cpp:227
Continuing.

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=1) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
#0  get_neighbors (graph=0x5555555720a0, i=1) at graph.cpp:77
#1  0x0000555555555f49 in bfs (graph=0x5555555720a0, src=0) at main.cpp:209
#2  0x0000555555556102 in main () at main.cpp:227
Continuing.

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=1) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
Continuing.

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=1) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
#0  get_neighbors (graph=0x5555555720a0, i=1) at graph.cpp:77
#1  0x0000555555555f49 in bfs (graph=0x5555555720a0, src=0) at main.cpp:209
#2  0x0000555555556102 in main () at main.cpp:227
Continuing.

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=1) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
#0  get_neighbors (graph=0x5555555720a0, i=1) at graph.cpp:77
#1  0x0000555555555f49 in bfs (graph=0x5555555720a0, src=0) at main.cpp:209
#2  0x0000555555556102 in main () at main.cpp:227
Continuing.

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=1) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
Continuing.

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=4) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
Continuing.

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=4) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
Continuing.

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=4) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
Continuing.

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=4) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
Continuing.

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=4) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
Continuing.

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=3) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
#0  get_neighbors (graph=0x5555555720a0, i=3) at graph.cpp:77
#1  0x0000555555555f49 in bfs (graph=0x5555555720a0, src=0) at main.cpp:209
#2  0x0000555555556102 in main () at main.cpp:227
Continuing.

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=3) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
Reading symbols from ./graph...

warning: exec file is newer than core file.
[New LWP 23792]
Core was generated by `./graph'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x000055689ba2a312 in ?? ()
#0  0x000055689ba2a312 in ?? ()
#1  0xffffffffffffffff in ?? ()
#2  0xffffffff00000001 in ?? ()
#3  0x000055689bb300a0 in ?? ()
#4  0x00007ffe00f3a6b0 in ?? ()
#5  0x000000009bb2f79c in ?? ()
#6  0xf219264340ee5100 in ?? ()
#7  0x000055689bb2f7a4 in ?? ()
#8  0x00007ffe00f3a630 in ?? ()
#9  0x00007ffe00f3a6f0 in ?? ()
#10 0x000055689ba2673d in ?? ()
#11 0x0000000e00000000 in ?? ()
#12 0x0000001c7fffffff in ?? ()
#13 0x00007ffe00000015 in ?? ()
#14 0x000055689ba265ad in ?? ()
#15 0x0000000000000005 in ?? ()
#16 0x0000000000000000 in ?? ()
Reading symbols from ./graph...
[New LWP 28635]
Core was generated by `./graph'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x0000561c6a0041b6 in get_neighbors (graph=0x561c6b12f0a0, i=-1) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
Breakpoint 1 at 0x561c6a004191: file graph.cpp, line 77.
Starting program: /home/dic3jam/Desktop/notebook/3050-Alogorithms/14week/graph 

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=0) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
$1 = {{0x5555555723c0, 0x5555555720c0, 0x31, 0x5555555720f0, 0x555555572180}, {0x555555572210, 0x5555555722a0, 0x555555572330, 0x91, 0x4e}, {0x0, 
    0x0, 0x0, 0x0, 0x0}, {0x0, 0x0, 0x0, 0x0, 0x0}, {0x0, 0x0, 0x0, 0x0, 0x0}}
j = 0
neighbors = std::vector of length 0, capacity 0
76		for (int j = 0; j < graph->SIZE; j++) {

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=0) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
78	            neighbors.push_back(j);
76		for (int j = 0; j < graph->SIZE; j++) {

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=0) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
76		for (int j = 0; j < graph->SIZE; j++) {

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=0) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
76		for (int j = 0; j < graph->SIZE; j++) {

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=0) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
78	            neighbors.push_back(j);
76		for (int j = 0; j < graph->SIZE; j++) {
82		return neighbors;
83	}
dijkstra (graph=0x5555555720a0, src=0) at main.cpp:85
85	            int alt = dist[u] + graph->distance[u][neighbor];
87	            if (alt < dist[neighbor]) {
Undefined show command: "locals".  Try "help show".
alt = 1
neighbor = 1
__for_range = @0x7fffffffdb10: std::vector of length 2, capacity 2 = {1, 4}
__for_begin = 1
__for_end = 0
u = 0
queue = std::vector of length 4, capacity 8 = {1, 2, 3, 4}
prev = 0x5555555714a0
dist = {0, 2147483647, 2147483647, 2147483647, 2147483647}
$2 = {0x5555555714a0, 0x4, 0x7fffffffda70, 0x7fffffffdb10, 0x555555571500}
88	                dist[neighbor] = alt;
89	                prev[neighbor] = u;
84	        for (int neighbor : get_neighbors(graph, u)) {
85	            int alt = dist[u] + graph->distance[u][neighbor];
87	            if (alt < dist[neighbor]) {
88	                dist[neighbor] = alt;
89	                prev[neighbor] = u;
84	        for (int neighbor : get_neighbors(graph, u)) {
81	    while (!queue.empty()) {
82	        int u = min_dist_vertex(queue, dist);
84	        for (int neighbor : get_neighbors(graph, u)) {

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=1) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
78	            neighbors.push_back(j);
76		for (int j = 0; j < graph->SIZE; j++) {

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=1) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
76		for (int j = 0; j < graph->SIZE; j++) {

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=1) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
76		for (int j = 0; j < graph->SIZE; j++) {

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=1) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
78	            neighbors.push_back(j);
76		for (int j = 0; j < graph->SIZE; j++) {

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=1) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
76		for (int j = 0; j < graph->SIZE; j++) {
82		return neighbors;
83	}
dijkstra (graph=0x5555555720a0, src=0) at main.cpp:85
85	            int alt = dist[u] + graph->distance[u][neighbor];
87	            if (alt < dist[neighbor]) {
84	        for (int neighbor : get_neighbors(graph, u)) {
85	            int alt = dist[u] + graph->distance[u][neighbor];
87	            if (alt < dist[neighbor]) {
88	                dist[neighbor] = alt;
89	                prev[neighbor] = u;
84	        for (int neighbor : get_neighbors(graph, u)) {
81	    while (!queue.empty()) {
queue = std::vector of length 3, capacity 8 = {2, 3, 4}
prev = 0x5555555714a0
dist = {0, 1, 2147483647, 2, 2}
82	        int u = min_dist_vertex(queue, dist);
84	        for (int neighbor : get_neighbors(graph, u)) {

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=3) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
78	            neighbors.push_back(j);
76		for (int j = 0; j < graph->SIZE; j++) {

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=3) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
76		for (int j = 0; j < graph->SIZE; j++) {

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=3) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
76		for (int j = 0; j < graph->SIZE; j++) {

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=3) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
76		for (int j = 0; j < graph->SIZE; j++) {

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=3) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
76		for (int j = 0; j < graph->SIZE; j++) {
82		return neighbors;
83	}
dijkstra (graph=0x5555555720a0, src=0) at main.cpp:85
85	            int alt = dist[u] + graph->distance[u][neighbor];
87	            if (alt < dist[neighbor]) {
84	        for (int neighbor : get_neighbors(graph, u)) {
81	    while (!queue.empty()) {
82	        int u = min_dist_vertex(queue, dist);
84	        for (int neighbor : get_neighbors(graph, u)) {

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=4) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
78	            neighbors.push_back(j);
76		for (int j = 0; j < graph->SIZE; j++) {

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=4) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
76		for (int j = 0; j < graph->SIZE; j++) {

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=4) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
76		for (int j = 0; j < graph->SIZE; j++) {

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=4) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
78	            neighbors.push_back(j);
76		for (int j = 0; j < graph->SIZE; j++) {

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=4) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
76		for (int j = 0; j < graph->SIZE; j++) {
82		return neighbors;
83	}
dijkstra (graph=0x5555555720a0, src=0) at main.cpp:85
85	            int alt = dist[u] + graph->distance[u][neighbor];
87	            if (alt < dist[neighbor]) {
84	        for (int neighbor : get_neighbors(graph, u)) {
85	            int alt = dist[u] + graph->distance[u][neighbor];
87	            if (alt < dist[neighbor]) {
84	        for (int neighbor : get_neighbors(graph, u)) {
81	    while (!queue.empty()) {
82	        int u = min_dist_vertex(queue, dist);
84	        for (int neighbor : get_neighbors(graph, u)) {

Breakpoint 1, get_neighbors (graph=0x5555555720a0, i=-1) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {

Program received signal SIGSEGV, Segmentation fault.
0x00005555555591b6 in get_neighbors (graph=0x5555555720a0, i=-1) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {

Program terminated with signal SIGSEGV, Segmentation fault.
The program no longer exists.
The program is not being run.
The program is not being run.
./graoh: No such file or directory.
[New LWP 28635]
Core was generated by `./graph'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x0000561c6a0041b6 in ?? ()
./graoh: No such file or directory.
[New LWP 28635]
Core was generated by `./graph'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x0000561c6a0041b6 in ?? ()
Reading symbols from ./graph...
/home/dic3jam/Desktop/notebook/3050-Alogorithms/14week/core: No such file or directory.
Reading symbols from ./graph...
[New LWP 29409]
Core was generated by `./graph'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x000055e6d58c11b6 in get_neighbors (graph=0x55e6d76b90a0, i=-1) at graph.cpp:77
77	        if (graph->distance[i][j] != 0) {
Reading symbols from ./graph...

warning: exec file is newer than core file.
[New LWP 29409]
Core was generated by `./graph'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x000055e6d58c11b6 in ?? ()
Reading symbols from ./graph...
/home/dic3jam/Desktop/notebook/3050-Alogorithms/14week/core: No such file or directory.
Undefined command: "".  Try "help".
Reading symbols from ./graph...
[New LWP 30753]
Core was generated by `./graph'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x000055851b5ec7e1 in dijkstra (graph=0x55851c1460a0, src=0) at main.cpp:85
85	            int alt = dist[u] + graph->distance[u][neighbor];
#0  0x000055851b5ec7e1 in dijkstra (graph=0x55851c1460a0, src=0) at main.cpp:85
#1  0x000055851b5ed102 in main () at main.cpp:243
$1 = -1
Reading symbols from ./graph...
Reading symbols from graph...
[New LWP 31059]
Core was generated by `./graph'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x000055b65ee147e1 in dijkstra (graph=0x55b660a3c0a0, src=0) at main.cpp:85
85	            int alt = dist[u] + graph->distance[u][neighbor];
$1 = -1
